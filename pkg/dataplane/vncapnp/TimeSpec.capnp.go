// Code generated by capnpc-go. DO NOT EDIT.

package vncapnp

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type TimeSpec struct{ capnp.Struct }

// TimeSpec_TypeID is the unique identifier for the type TimeSpec.
const TimeSpec_TypeID = 0xbf708ef135ebc1d4

func NewTimeSpec(s *capnp.Segment) (TimeSpec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return TimeSpec{st}, err
}

func NewRootTimeSpec(s *capnp.Segment) (TimeSpec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return TimeSpec{st}, err
}

func ReadRootTimeSpec(msg *capnp.Message) (TimeSpec, error) {
	root, err := msg.RootPtr()
	return TimeSpec{root.Struct()}, err
}

func (s TimeSpec) String() string {
	str, _ := text.Marshal(0xbf708ef135ebc1d4, s.Struct)
	return str
}

func (s TimeSpec) TvSec() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s TimeSpec) SetTvSec(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s TimeSpec) TvNsec() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s TimeSpec) SetTvNsec(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

// TimeSpec_List is a list of TimeSpec.
type TimeSpec_List struct{ capnp.List }

// NewTimeSpec creates a new list of TimeSpec.
func NewTimeSpec_List(s *capnp.Segment, sz int32) (TimeSpec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return TimeSpec_List{l}, err
}

func (s TimeSpec_List) At(i int) TimeSpec { return TimeSpec{s.List.Struct(i)} }

func (s TimeSpec_List) Set(i int, v TimeSpec) error { return s.List.SetStruct(i, v.Struct) }

func (s TimeSpec_List) String() string {
	str, _ := text.MarshalList(0xbf708ef135ebc1d4, s.List)
	return str
}

// TimeSpec_Promise is a wrapper for a TimeSpec promised by a client call.
type TimeSpec_Promise struct{ *capnp.Pipeline }

func (p TimeSpec_Promise) Struct() (TimeSpec, error) {
	s, err := p.Pipeline.Struct()
	return TimeSpec{s}, err
}

const schema_bcbc7bd29390d6e8 = "x\xda\x12hr`2d=\xce\xc4\xc0\x10\xa8\xc0\xca" +
	"\xf6\xff\xca\xc1\xd7\xa6\x1f\xfb\x0a\xf63\x04*22\xfd" +
	"\x7fqm\xc2\xe4K\xd5{\xf60\xb0\xb030\x18{" +
	"2\x061\x0a\xc72\xb230\x08G2\x963\xf8\xfd" +
	"ON,\xc8+\xd0\xcf\xcbgII\xd5O\xce\xcf\xcd" +
	"\xcd\xcf\xd3\x0f\xc9\xccM\x0d.HM\xd6\x03\xcbYA" +
	"\xb9\x8c\xc9\x01\x8c\x8c\x81\x1c\xcc,\x0c\x0c,\x8c\x0c\x0c" +
	"\x82\x9aF\x0c\x0c\x81*\xcc\x8c\x81\x06L\x8c\x82\x8c\x8c" +
	"\"\x8c A]+\x06\x86@\x0df\xc6@\x13&F" +
	"\xf9\x92\xb2\xe0\xd4dFV\x06&FV\x06F\xfb\x92" +
	"2\xbfb\x04\x17\x10\x00\x00\xff\xff\x7f\x9b+\x8b"

func init() {
	schemas.Register(schema_bcbc7bd29390d6e8,
		0xbf708ef135ebc1d4)
}
